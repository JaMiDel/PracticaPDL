package Objetos;
public class Token{
    public static Token ID = new Token("ID");
    public static Token CAD = new Token("CAD");
    public static Token NUM = new Token("NUM");
    
    public static Token VAR = new Token("PAL_RES", 0);
    public static Token INT = new Token("PAL_RES", 1);
    public static Token CHARS = new Token("PAL_RES", 2);
    public static Token BOOL = new Token("PAL_RES", 3);
    public static Token WHILE = new Token("PAL_RES", 4);
    public static Token FUNCTION = new Token("PAL_RES", 5);
    public static Token RETURN = new Token("PAL_RES", 6);
    public static Token TRUE = new Token("PAL_RES", 7);
    public static Token FALSE = new Token("PAL_RES", 8);
    public static Token WRITE = new Token("PAL_RES", 9);
    public static Token PROMPT = new Token("PAL_RES", 10);
    
    public static Token RESTO = new Token("OPERADOR", 0);
    public static Token ASIGNACION  = new Token("OPERADOR", 1);
    public static Token ASIGNACIONRESTO = new Token("OPERADOR", 2);
    public static Token MAYOR = new Token("OPERADOR", 3);
    public static Token OR = new Token("OPERADOR", 4);
    
    public static Token PARENTESIS_I = new Token("CARACTER", "(");
    public static Token PARENTESIS_D = new Token("CARACTER", ")");
    public static Token LLAVE_I = new Token("CARACTER", "{");
    public static Token LLAVE_D = new Token("CARACTER", "}");
    public static Token COMA = new Token("CARACTER", ",");
    public static Token PUNTOCOMA = new Token("CARACTER", ";");
   
    public static Token EOL = new Token("EOL");
    public static Token EOF = new Token("EOF");
    public static Token NULL = new Token("NULL");
    public static Token LAMBDA = null;
    
    private String identifier;
    private Object attribute;
    private Object value;

    public Token(String id) {
        this.identifier = id;
        this.attribute = null;
        this.value = id;
    }

    public Token(String id, Object attr) {
        this.identifier = id;
        this.attribute = attr;
        this.value = id;
    }

    public Token(String id, int attr) {
        this.identifier = id;
        this.attribute = attr;
    }

    public String getIdentifier() {
        return this.identifier;
    }

    public void setIdentifier(String identifier) {
        this.identifier = identifier;
    }
    
    public Object getAttribute() {
        return this.attribute;
    }
    
    public void setAttribute(String attribute) {
        this.attribute = attribute;
    }
   
    public Object getValue() {
        return this.value;
    }
   
    public void setValue(Object value) {
        this.value = value;
    } 
    @Override
    public boolean equals(Object object){
		boolean is_equal = false;
		if (object != null){
			if (object instanceof Token){
				Token token = (Token)object;
				switch (token.identifier) {
					case "ID":
					case "CAD":
					case "NUM":
					case "EOL":
					case "EOF":
					case "NULL":
						is_equal = this.identifier == token.identifier;
						break;
					default:
						if (this.identifier == token.identifier){
							is_equal = this.attribute.equals(token.attribute);
						}
						break;
				}
			}
		}
		
		return is_equal;
	}
    @Override
    public String toString() {
        if (this.attribute == null) {
            return "<" + this.identifier + ", >";
        }
        return "<" + this.identifier + ", " + this.attribute + ">";
    }
}